{"ast":null,"code":"var _jsxFileName = \"E:\\\\LETU\\\\Transcript-Notes\\\\Transcript-Notes\\\\react-transcript-notes\\\\src\\\\components\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = ({\n  isRecording,\n  isPaused,\n  startTime\n}) => {\n  _s();\n  const [elapsedTime, setElapsedTime] = useState(0);\n  useEffect(() => {\n    let interval = null;\n    if (isRecording && !isPaused) {\n      interval = setInterval(() => {\n        const currentTime = Date.now();\n        const elapsed = Math.floor((currentTime - startTime) / 1000);\n        setElapsedTime(elapsed);\n      }, 1000);\n    }\n    return () => {\n      if (interval) clearInterval(interval);\n    };\n  }, [isRecording, isPaused, startTime]);\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n  };\n  let timerDisplay = \"Not recording\";\n  if (isRecording && isPaused) {\n    timerDisplay = `Recording paused at ${formatTime(elapsedTime)}`;\n  } else if (isRecording) {\n    timerDisplay = `Recording Time: ${formatTime(elapsedTime)}`;\n  } else if (elapsedTime > 0) {\n    timerDisplay = `Recording stopped at ${formatTime(elapsedTime)}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer\",\n    children: timerDisplay\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_s(Timer, \"qjUdXD44Xrq0jX4C+PAAtl9dcYI=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Timer","isRecording","isPaused","startTime","_s","elapsedTime","setElapsedTime","interval","setInterval","currentTime","Date","now","elapsed","Math","floor","clearInterval","formatTime","seconds","minutes","remainingSeconds","toString","padStart","timerDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/LETU/Transcript-Notes/Transcript-Notes/react-transcript-notes/src/components/Timer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Timer = ({ isRecording, isPaused, startTime }) => {\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (isRecording && !isPaused) {\r\n      interval = setInterval(() => {\r\n        const currentTime = Date.now();\r\n        const elapsed = Math.floor((currentTime - startTime) / 1000);\r\n        setElapsedTime(elapsed);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (interval) clearInterval(interval);\r\n    };\r\n  }, [isRecording, isPaused, startTime]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${remainingSeconds\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n\r\n  let timerDisplay = \"Not recording\";\r\n\r\n  if (isRecording && isPaused) {\r\n    timerDisplay = `Recording paused at ${formatTime(elapsedTime)}`;\r\n  } else if (isRecording) {\r\n    timerDisplay = `Recording Time: ${formatTime(elapsedTime)}`;\r\n  } else if (elapsedTime > 0) {\r\n    timerDisplay = `Recording stopped at ${formatTime(elapsedTime)}`;\r\n  }\r\n\r\n  return <div className=\"timer\">{timerDisplay}</div>;\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAC;EAAEC,WAAW;EAAEC,QAAQ;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACd,IAAIU,QAAQ,GAAG,IAAI;IAEnB,IAAIN,WAAW,IAAI,CAACC,QAAQ,EAAE;MAC5BK,QAAQ,GAAGC,WAAW,CAAC,MAAM;QAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC;QAC9B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACL,WAAW,GAAGN,SAAS,IAAI,IAAI,CAAC;QAC5DG,cAAc,CAACM,OAAO,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;IACV;IAEA,OAAO,MAAM;MACX,IAAIL,QAAQ,EAAEQ,aAAa,CAACR,QAAQ,CAAC;IACvC,CAAC;EACH,CAAC,EAAE,CAACN,WAAW,EAAEC,QAAQ,EAAEC,SAAS,CAAC,CAAC;EAEtC,MAAMa,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,OAAO,GAAGL,IAAI,CAACC,KAAK,CAACG,OAAO,GAAG,EAAE,CAAC;IACxC,MAAME,gBAAgB,GAAGF,OAAO,GAAG,EAAE;IACrC,OAAO,GAAGC,OAAO,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIF,gBAAgB,CAC9DC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACvB,CAAC;EAED,IAAIC,YAAY,GAAG,eAAe;EAElC,IAAIrB,WAAW,IAAIC,QAAQ,EAAE;IAC3BoB,YAAY,GAAG,uBAAuBN,UAAU,CAACX,WAAW,CAAC,EAAE;EACjE,CAAC,MAAM,IAAIJ,WAAW,EAAE;IACtBqB,YAAY,GAAG,mBAAmBN,UAAU,CAACX,WAAW,CAAC,EAAE;EAC7D,CAAC,MAAM,IAAIA,WAAW,GAAG,CAAC,EAAE;IAC1BiB,YAAY,GAAG,wBAAwBN,UAAU,CAACX,WAAW,CAAC,EAAE;EAClE;EAEA,oBAAON,OAAA;IAAKwB,SAAS,EAAC,OAAO;IAAAC,QAAA,EAAEF;EAAY;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpD,CAAC;AAACxB,EAAA,CAtCIJ,KAAK;AAAA6B,EAAA,GAAL7B,KAAK;AAwCX,eAAeA,KAAK;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}