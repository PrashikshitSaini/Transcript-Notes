{"ast":null,"code":"var _jsxFileName = \"E:\\\\LETU\\\\Transcript-Notes\\\\Transcript-Notes\\\\react-transcript-notes\\\\src\\\\components\\\\RecordingControls.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { ReactMic } from \"react-mic\";\nimport { transcribeAudio } from \"../services/transcriptionService\";\nimport { generateNotes } from \"../services/notesGenerationService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordingControls = ({\n  isRecording,\n  isPaused,\n  onStartRecording,\n  onPauseRecording,\n  onResumeRecording,\n  onStopRecording,\n  onNotesGenerated\n}) => {\n  _s();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isReactMicSupported, setIsReactMicSupported] = useState(true);\n  const fileInputRef = useRef(null);\n\n  // Check if browser supports user media for ReactMic\n  useEffect(() => {\n    const checkMediaSupport = async () => {\n      try {\n        await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n      } catch (err) {\n        console.error(\"Media not supported:\", err);\n        setIsReactMicSupported(false);\n      }\n    };\n    checkMediaSupport();\n  }, []);\n  const onData = recordedBlob => {\n    // Not storing streaming data to avoid excessive memory usage\n  };\n  const onStop = async recordedBlob => {\n    try {\n      setIsProcessing(true);\n\n      // Convert blob to file\n      const audioFile = new File([recordedBlob.blob], \"recording.wav\", {\n        type: \"audio/wav\"\n      });\n\n      // Transcribe audio\n      const transcript = await transcribeAudio(audioFile);\n\n      // Generate notes from transcript\n      const notes = await generateNotes(transcript);\n      onNotesGenerated(notes);\n    } catch (error) {\n      console.error(\"Error processing recording:\", error);\n      onNotesGenerated(\"Error processing recording: \" + error.message);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleFileSelect = async e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      try {\n        setIsProcessing(true);\n\n        // Transcribe audio file\n        const transcript = await transcribeAudio(file);\n\n        // Generate notes from transcript\n        const notes = await generateNotes(transcript);\n        onNotesGenerated(notes);\n      } catch (error) {\n        console.error(\"Error processing file:\", error);\n        alert(\"Error processing file: \" + error.message);\n      } finally {\n        setIsProcessing(false);\n      }\n    }\n  };\n  const handleShortRecording = () => {\n    if (isRecording) return;\n    onStartRecording();\n    setTimeout(() => {\n      if (isRecording) {\n        onStopRecording();\n      }\n    }, 10000); // 10 seconds for short recording\n  };\n  const handleLongRecording = () => {\n    if (isRecording) return;\n    onStartRecording();\n    // Long recording (30 minutes) relies on user to stop manually\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"recording-controls\",\n    children: [isReactMicSupported ? /*#__PURE__*/_jsxDEV(ReactMic, {\n      record: isRecording && !isPaused,\n      className: \"sound-wave\",\n      onStop: onStop,\n      onData: onData,\n      strokeColor: \"#000000\",\n      backgroundColor: \"#FF4081\",\n      mimeType: \"audio/wav\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sound-wave-placeholder\",\n      children: \"Microphone access not available in this browser. Please try using the file upload option instead.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleShortRecording,\n        disabled: isRecording || isProcessing || !isReactMicSupported,\n        children: \"Record from Mic\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"file-label\",\n        children: [\"Select Audio File\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          ref: fileInputRef,\n          onChange: handleFileSelect,\n          accept: \"audio/wav,audio/mp3,audio/m4a\",\n          className: \"file-input\",\n          disabled: isRecording || isProcessing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLongRecording,\n        disabled: isRecording || isProcessing,\n        children: \"Record 30 Minutes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onPauseRecording,\n        disabled: !isRecording || isPaused || isProcessing,\n        children: \"Pause Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onResumeRecording,\n        disabled: !isRecording || !isPaused || isProcessing,\n        children: \"Resume Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onStopRecording,\n        disabled: !isRecording || isProcessing,\n        children: \"Stop Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Processing... Please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordingControls, \"bC8UGmVAtwQa930AOhwFjtbhYuQ=\");\n_c = RecordingControls;\nexport default RecordingControls;\nvar _c;\n$RefreshReg$(_c, \"RecordingControls\");","map":{"version":3,"names":["React","useRef","useState","useEffect","ReactMic","transcribeAudio","generateNotes","jsxDEV","_jsxDEV","RecordingControls","isRecording","isPaused","onStartRecording","onPauseRecording","onResumeRecording","onStopRecording","onNotesGenerated","_s","isProcessing","setIsProcessing","isReactMicSupported","setIsReactMicSupported","fileInputRef","checkMediaSupport","navigator","mediaDevices","getUserMedia","audio","err","console","error","onData","recordedBlob","onStop","audioFile","File","blob","type","transcript","notes","message","handleFileSelect","e","target","files","file","alert","handleShortRecording","setTimeout","handleLongRecording","className","children","record","strokeColor","backgroundColor","mimeType","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","onChange","accept","_c","$RefreshReg$"],"sources":["E:/LETU/Transcript-Notes/Transcript-Notes/react-transcript-notes/src/components/RecordingControls.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\r\nimport { ReactMic } from \"react-mic\";\r\nimport { transcribeAudio } from \"../services/transcriptionService\";\r\nimport { generateNotes } from \"../services/notesGenerationService\";\r\n\r\nconst RecordingControls = ({\r\n  isRecording,\r\n  isPaused,\r\n  onStartRecording,\r\n  onPauseRecording,\r\n  onResumeRecording,\r\n  onStopRecording,\r\n  onNotesGenerated,\r\n}) => {\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isReactMicSupported, setIsReactMicSupported] = useState(true);\r\n  const fileInputRef = useRef(null);\r\n\r\n  // Check if browser supports user media for ReactMic\r\n  useEffect(() => {\r\n    const checkMediaSupport = async () => {\r\n      try {\r\n        await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      } catch (err) {\r\n        console.error(\"Media not supported:\", err);\r\n        setIsReactMicSupported(false);\r\n      }\r\n    };\r\n\r\n    checkMediaSupport();\r\n  }, []);\r\n\r\n  const onData = (recordedBlob) => {\r\n    // Not storing streaming data to avoid excessive memory usage\r\n  };\r\n\r\n  const onStop = async (recordedBlob) => {\r\n    try {\r\n      setIsProcessing(true);\r\n\r\n      // Convert blob to file\r\n      const audioFile = new File([recordedBlob.blob], \"recording.wav\", {\r\n        type: \"audio/wav\",\r\n      });\r\n\r\n      // Transcribe audio\r\n      const transcript = await transcribeAudio(audioFile);\r\n\r\n      // Generate notes from transcript\r\n      const notes = await generateNotes(transcript);\r\n\r\n      onNotesGenerated(notes);\r\n    } catch (error) {\r\n      console.error(\"Error processing recording:\", error);\r\n      onNotesGenerated(\"Error processing recording: \" + error.message);\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const handleFileSelect = async (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n\r\n      try {\r\n        setIsProcessing(true);\r\n\r\n        // Transcribe audio file\r\n        const transcript = await transcribeAudio(file);\r\n\r\n        // Generate notes from transcript\r\n        const notes = await generateNotes(transcript);\r\n\r\n        onNotesGenerated(notes);\r\n      } catch (error) {\r\n        console.error(\"Error processing file:\", error);\r\n        alert(\"Error processing file: \" + error.message);\r\n      } finally {\r\n        setIsProcessing(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleShortRecording = () => {\r\n    if (isRecording) return;\r\n    onStartRecording();\r\n    setTimeout(() => {\r\n      if (isRecording) {\r\n        onStopRecording();\r\n      }\r\n    }, 10000); // 10 seconds for short recording\r\n  };\r\n\r\n  const handleLongRecording = () => {\r\n    if (isRecording) return;\r\n    onStartRecording();\r\n    // Long recording (30 minutes) relies on user to stop manually\r\n  };\r\n\r\n  return (\r\n    <div className=\"recording-controls\">\r\n      {isReactMicSupported ? (\r\n        <ReactMic\r\n          record={isRecording && !isPaused}\r\n          className=\"sound-wave\"\r\n          onStop={onStop}\r\n          onData={onData}\r\n          strokeColor=\"#000000\"\r\n          backgroundColor=\"#FF4081\"\r\n          mimeType=\"audio/wav\"\r\n        />\r\n      ) : (\r\n        <div className=\"sound-wave-placeholder\">\r\n          Microphone access not available in this browser. Please try using the\r\n          file upload option instead.\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"button-group\">\r\n        <button\r\n          onClick={handleShortRecording}\r\n          disabled={isRecording || isProcessing || !isReactMicSupported}\r\n        >\r\n          Record from Mic\r\n        </button>\r\n\r\n        <label className=\"file-label\">\r\n          Select Audio File\r\n          <input\r\n            type=\"file\"\r\n            ref={fileInputRef}\r\n            onChange={handleFileSelect}\r\n            accept=\"audio/wav,audio/mp3,audio/m4a\"\r\n            className=\"file-input\"\r\n            disabled={isRecording || isProcessing}\r\n          />\r\n        </label>\r\n\r\n        <button\r\n          onClick={handleLongRecording}\r\n          disabled={isRecording || isProcessing}\r\n        >\r\n          Record 30 Minutes\r\n        </button>\r\n\r\n        <button\r\n          onClick={onPauseRecording}\r\n          disabled={!isRecording || isPaused || isProcessing}\r\n        >\r\n          Pause Recording\r\n        </button>\r\n\r\n        <button\r\n          onClick={onResumeRecording}\r\n          disabled={!isRecording || !isPaused || isProcessing}\r\n        >\r\n          Resume Recording\r\n        </button>\r\n\r\n        <button\r\n          onClick={onStopRecording}\r\n          disabled={!isRecording || isProcessing}\r\n        >\r\n          Stop Recording\r\n        </button>\r\n      </div>\r\n\r\n      {isProcessing && <p>Processing... Please wait</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecordingControls;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,aAAa,QAAQ,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,iBAAiB,GAAGA,CAAC;EACzBC,WAAW;EACXC,QAAQ;EACRC,gBAAgB;EAChBC,gBAAgB;EAChBC,iBAAiB;EACjBC,eAAe;EACfC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACkB,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACpE,MAAMoB,YAAY,GAAGrB,MAAM,CAAC,IAAI,CAAC;;EAEjC;EACAE,SAAS,CAAC,MAAM;IACd,MAAMoB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;MAC5D,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC;QAC1CP,sBAAsB,CAAC,KAAK,CAAC;MAC/B;IACF,CAAC;IAEDE,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,MAAM,GAAIC,YAAY,IAAK;IAC/B;EAAA,CACD;EAED,MAAMC,MAAM,GAAG,MAAOD,YAAY,IAAK;IACrC,IAAI;MACFb,eAAe,CAAC,IAAI,CAAC;;MAErB;MACA,MAAMe,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACH,YAAY,CAACI,IAAI,CAAC,EAAE,eAAe,EAAE;QAC/DC,IAAI,EAAE;MACR,CAAC,CAAC;;MAEF;MACA,MAAMC,UAAU,GAAG,MAAMjC,eAAe,CAAC6B,SAAS,CAAC;;MAEnD;MACA,MAAMK,KAAK,GAAG,MAAMjC,aAAa,CAACgC,UAAU,CAAC;MAE7CtB,gBAAgB,CAACuB,KAAK,CAAC;IACzB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDd,gBAAgB,CAAC,8BAA8B,GAAGc,KAAK,CAACU,OAAO,CAAC;IAClE,CAAC,SAAS;MACRrB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMsB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpC,IAAIA,CAAC,CAACC,MAAM,CAACC,KAAK,IAAIF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MACvC,MAAMC,IAAI,GAAGH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAE9B,IAAI;QACFzB,eAAe,CAAC,IAAI,CAAC;;QAErB;QACA,MAAMmB,UAAU,GAAG,MAAMjC,eAAe,CAACwC,IAAI,CAAC;;QAE9C;QACA,MAAMN,KAAK,GAAG,MAAMjC,aAAa,CAACgC,UAAU,CAAC;QAE7CtB,gBAAgB,CAACuB,KAAK,CAAC;MACzB,CAAC,CAAC,OAAOT,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;QAC9CgB,KAAK,CAAC,yBAAyB,GAAGhB,KAAK,CAACU,OAAO,CAAC;MAClD,CAAC,SAAS;QACRrB,eAAe,CAAC,KAAK,CAAC;MACxB;IACF;EACF,CAAC;EAED,MAAM4B,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAIrC,WAAW,EAAE;IACjBE,gBAAgB,CAAC,CAAC;IAClBoC,UAAU,CAAC,MAAM;MACf,IAAItC,WAAW,EAAE;QACfK,eAAe,CAAC,CAAC;MACnB;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACb,CAAC;EAED,MAAMkC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIvC,WAAW,EAAE;IACjBE,gBAAgB,CAAC,CAAC;IAClB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAK0C,SAAS,EAAC,oBAAoB;IAAAC,QAAA,GAChC/B,mBAAmB,gBAClBZ,OAAA,CAACJ,QAAQ;MACPgD,MAAM,EAAE1C,WAAW,IAAI,CAACC,QAAS;MACjCuC,SAAS,EAAC,YAAY;MACtBjB,MAAM,EAAEA,MAAO;MACfF,MAAM,EAAEA,MAAO;MACfsB,WAAW,EAAC,SAAS;MACrBC,eAAe,EAAC,SAAS;MACzBC,QAAQ,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,gBAEFnD,OAAA;MAAK0C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAGxC;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CACN,eAEDnD,OAAA;MAAK0C,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3C,OAAA;QACEoD,OAAO,EAAEb,oBAAqB;QAC9Bc,QAAQ,EAAEnD,WAAW,IAAIQ,YAAY,IAAI,CAACE,mBAAoB;QAAA+B,QAAA,EAC/D;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETnD,OAAA;QAAO0C,SAAS,EAAC,YAAY;QAAAC,QAAA,GAAC,mBAE5B,eAAA3C,OAAA;UACE6B,IAAI,EAAC,MAAM;UACXyB,GAAG,EAAExC,YAAa;UAClByC,QAAQ,EAAEtB,gBAAiB;UAC3BuB,MAAM,EAAC,+BAA+B;UACtCd,SAAS,EAAC,YAAY;UACtBW,QAAQ,EAAEnD,WAAW,IAAIQ;QAAa;UAAAsC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAERnD,OAAA;QACEoD,OAAO,EAAEX,mBAAoB;QAC7BY,QAAQ,EAAEnD,WAAW,IAAIQ,YAAa;QAAAiC,QAAA,EACvC;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETnD,OAAA;QACEoD,OAAO,EAAE/C,gBAAiB;QAC1BgD,QAAQ,EAAE,CAACnD,WAAW,IAAIC,QAAQ,IAAIO,YAAa;QAAAiC,QAAA,EACpD;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETnD,OAAA;QACEoD,OAAO,EAAE9C,iBAAkB;QAC3B+C,QAAQ,EAAE,CAACnD,WAAW,IAAI,CAACC,QAAQ,IAAIO,YAAa;QAAAiC,QAAA,EACrD;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAETnD,OAAA;QACEoD,OAAO,EAAE7C,eAAgB;QACzB8C,QAAQ,EAAE,CAACnD,WAAW,IAAIQ,YAAa;QAAAiC,QAAA,EACxC;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELzC,YAAY,iBAAIV,OAAA;MAAA2C,QAAA,EAAG;IAAyB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC1C,EAAA,CArKIR,iBAAiB;AAAAwD,EAAA,GAAjBxD,iBAAiB;AAuKvB,eAAeA,iBAAiB;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}